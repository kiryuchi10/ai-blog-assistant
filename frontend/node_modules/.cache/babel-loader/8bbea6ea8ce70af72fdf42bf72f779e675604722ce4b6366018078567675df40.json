{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/user/Documents/GitHub/ai-blog-assistant/ai-blog-assistant/frontend/src/contexts/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  theme: 'light',\n  // 'light' | 'dark' | 'system'\n  isDark: false,\n  primaryColor: '#2563eb',\n  fontSize: 'medium',\n  // 'small' | 'medium' | 'large'\n  sidebarCollapsed: false,\n  animations: true\n};\n\n// Action types\nconst THEME_ACTIONS = {\n  SET_THEME: 'SET_THEME',\n  TOGGLE_THEME: 'TOGGLE_THEME',\n  SET_PRIMARY_COLOR: 'SET_PRIMARY_COLOR',\n  SET_FONT_SIZE: 'SET_FONT_SIZE',\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\n  SET_ANIMATIONS: 'SET_ANIMATIONS',\n  LOAD_PREFERENCES: 'LOAD_PREFERENCES'\n};\n\n// Reducer\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case THEME_ACTIONS.SET_THEME:\n      return {\n        ...state,\n        theme: action.payload,\n        isDark: action.payload === 'dark' || action.payload === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches\n      };\n    case THEME_ACTIONS.TOGGLE_THEME:\n      const newTheme = state.theme === 'light' ? 'dark' : 'light';\n      return {\n        ...state,\n        theme: newTheme,\n        isDark: newTheme === 'dark'\n      };\n    case THEME_ACTIONS.SET_PRIMARY_COLOR:\n      return {\n        ...state,\n        primaryColor: action.payload\n      };\n    case THEME_ACTIONS.SET_FONT_SIZE:\n      return {\n        ...state,\n        fontSize: action.payload\n      };\n    case THEME_ACTIONS.TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarCollapsed: !state.sidebarCollapsed\n      };\n    case THEME_ACTIONS.SET_ANIMATIONS:\n      return {\n        ...state,\n        animations: action.payload\n      };\n    case THEME_ACTIONS.LOAD_PREFERENCES:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Custom hook to use theme context\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Theme Provider component\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(themeReducer, initialState);\n\n  // Load preferences from localStorage on mount\n  useEffect(() => {\n    loadPreferences();\n  }, [loadPreferences]);\n\n  // Save preferences to localStorage whenever state changes\n  useEffect(() => {\n    savePreferences();\n  }, [savePreferences]);\n\n  // Apply theme to document\n  useEffect(() => {\n    applyTheme();\n  }, [applyTheme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    if (state.theme === 'system') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      const handleChange = e => {\n        dispatch({\n          type: THEME_ACTIONS.SET_THEME,\n          payload: 'system'\n        });\n      };\n      mediaQuery.addEventListener('change', handleChange);\n      return () => mediaQuery.removeEventListener('change', handleChange);\n    }\n  }, [state.theme]);\n\n  // Load preferences from localStorage\n  const loadPreferences = useCallback(() => {\n    try {\n      const saved = localStorage.getItem('blog_assistant_theme_preferences');\n      if (saved) {\n        const preferences = JSON.parse(saved);\n        dispatch({\n          type: THEME_ACTIONS.LOAD_PREFERENCES,\n          payload: preferences\n        });\n      }\n    } catch (error) {\n      console.error('Failed to load theme preferences:', error);\n    }\n  }, []);\n\n  // Save preferences to localStorage\n  const savePreferences = useCallback(() => {\n    try {\n      localStorage.setItem('blog_assistant_theme_preferences', JSON.stringify(state));\n    } catch (error) {\n      console.error('Failed to save theme preferences:', error);\n    }\n  }, [state]);\n\n  // Apply theme to document\n  const applyTheme = useCallback(() => {\n    const root = document.documentElement;\n\n    // Apply theme class\n    root.className = root.className.replace(/theme-\\w+/g, '');\n    root.classList.add(`theme-${state.isDark ? 'dark' : 'light'}`);\n\n    // Apply primary color\n    root.style.setProperty('--primary-color', state.primaryColor);\n\n    // Apply font size\n    const fontSizes = {\n      small: '14px',\n      medium: '16px',\n      large: '18px'\n    };\n    root.style.setProperty('--base-font-size', fontSizes[state.fontSize]);\n\n    // Apply animations\n    root.style.setProperty('--animation-duration', state.animations ? '0.3s' : '0s');\n\n    // Apply sidebar state\n    root.classList.toggle('sidebar-collapsed', state.sidebarCollapsed);\n  }, [state.isDark, state.primaryColor, state.fontSize, state.animations, state.sidebarCollapsed]);\n\n  // Set theme\n  const setTheme = theme => {\n    dispatch({\n      type: THEME_ACTIONS.SET_THEME,\n      payload: theme\n    });\n  };\n\n  // Toggle theme\n  const toggleTheme = () => {\n    dispatch({\n      type: THEME_ACTIONS.TOGGLE_THEME\n    });\n  };\n\n  // Set primary color\n  const setPrimaryColor = color => {\n    dispatch({\n      type: THEME_ACTIONS.SET_PRIMARY_COLOR,\n      payload: color\n    });\n  };\n\n  // Set font size\n  const setFontSize = size => {\n    dispatch({\n      type: THEME_ACTIONS.SET_FONT_SIZE,\n      payload: size\n    });\n  };\n\n  // Toggle sidebar\n  const toggleSidebar = () => {\n    dispatch({\n      type: THEME_ACTIONS.TOGGLE_SIDEBAR\n    });\n  };\n\n  // Set animations\n  const setAnimations = enabled => {\n    dispatch({\n      type: THEME_ACTIONS.SET_ANIMATIONS,\n      payload: enabled\n    });\n  };\n\n  // Get CSS custom properties\n  const getCSSVariables = () => {\n    return {\n      '--primary-color': state.primaryColor,\n      '--base-font-size': {\n        small: '14px',\n        medium: '16px',\n        large: '18px'\n      }[state.fontSize],\n      '--animation-duration': state.animations ? '0.3s' : '0s'\n    };\n  };\n\n  // Context value\n  const value = {\n    // State\n    theme: state.theme,\n    isDark: state.isDark,\n    primaryColor: state.primaryColor,\n    fontSize: state.fontSize,\n    sidebarCollapsed: state.sidebarCollapsed,\n    animations: state.animations,\n    // Actions\n    setTheme,\n    toggleTheme,\n    setPrimaryColor,\n    setFontSize,\n    toggleSidebar,\n    setAnimations,\n    // Utilities\n    getCSSVariables\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"mXMZg1hyOtxlj+bKnORQ57Gr1n8=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","jsxDEV","_jsxDEV","initialState","theme","isDark","primaryColor","fontSize","sidebarCollapsed","animations","THEME_ACTIONS","SET_THEME","TOGGLE_THEME","SET_PRIMARY_COLOR","SET_FONT_SIZE","TOGGLE_SIDEBAR","SET_ANIMATIONS","LOAD_PREFERENCES","themeReducer","state","action","type","payload","window","matchMedia","matches","newTheme","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","dispatch","loadPreferences","savePreferences","applyTheme","mediaQuery","handleChange","e","addEventListener","removeEventListener","saved","localStorage","getItem","preferences","JSON","parse","error","console","setItem","stringify","root","document","documentElement","className","replace","classList","add","style","setProperty","fontSizes","small","medium","large","toggle","setTheme","toggleTheme","setPrimaryColor","color","setFontSize","size","toggleSidebar","setAnimations","enabled","getCSSVariables","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/c/Users/user/Documents/GitHub/ai-blog-assistant/ai-blog-assistant/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  theme: 'light', // 'light' | 'dark' | 'system'\r\n  isDark: false,\r\n  primaryColor: '#2563eb',\r\n  fontSize: 'medium', // 'small' | 'medium' | 'large'\r\n  sidebarCollapsed: false,\r\n  animations: true,\r\n};\r\n\r\n// Action types\r\nconst THEME_ACTIONS = {\r\n  SET_THEME: 'SET_THEME',\r\n  TOGGLE_THEME: 'TOGGLE_THEME',\r\n  SET_PRIMARY_COLOR: 'SET_PRIMARY_COLOR',\r\n  SET_FONT_SIZE: 'SET_FONT_SIZE',\r\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\r\n  SET_ANIMATIONS: 'SET_ANIMATIONS',\r\n  LOAD_PREFERENCES: 'LOAD_PREFERENCES',\r\n};\r\n\r\n// Reducer\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case THEME_ACTIONS.SET_THEME:\r\n      return {\r\n        ...state,\r\n        theme: action.payload,\r\n        isDark: action.payload === 'dark' || \r\n               (action.payload === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches),\r\n      };\r\n\r\n    case THEME_ACTIONS.TOGGLE_THEME:\r\n      const newTheme = state.theme === 'light' ? 'dark' : 'light';\r\n      return {\r\n        ...state,\r\n        theme: newTheme,\r\n        isDark: newTheme === 'dark',\r\n      };\r\n\r\n    case THEME_ACTIONS.SET_PRIMARY_COLOR:\r\n      return {\r\n        ...state,\r\n        primaryColor: action.payload,\r\n      };\r\n\r\n    case THEME_ACTIONS.SET_FONT_SIZE:\r\n      return {\r\n        ...state,\r\n        fontSize: action.payload,\r\n      };\r\n\r\n    case THEME_ACTIONS.TOGGLE_SIDEBAR:\r\n      return {\r\n        ...state,\r\n        sidebarCollapsed: !state.sidebarCollapsed,\r\n      };\r\n\r\n    case THEME_ACTIONS.SET_ANIMATIONS:\r\n      return {\r\n        ...state,\r\n        animations: action.payload,\r\n      };\r\n\r\n    case THEME_ACTIONS.LOAD_PREFERENCES:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst ThemeContext = createContext();\r\n\r\n// Custom hook to use theme context\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Theme Provider component\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  // Load preferences from localStorage on mount\r\n  useEffect(() => {\r\n    loadPreferences();\r\n  }, [loadPreferences]);\r\n\r\n  // Save preferences to localStorage whenever state changes\r\n  useEffect(() => {\r\n    savePreferences();\r\n  }, [savePreferences]);\r\n\r\n  // Apply theme to document\r\n  useEffect(() => {\r\n    applyTheme();\r\n  }, [applyTheme]);\r\n\r\n  // Listen for system theme changes\r\n  useEffect(() => {\r\n    if (state.theme === 'system') {\r\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n      const handleChange = (e) => {\r\n        dispatch({\r\n          type: THEME_ACTIONS.SET_THEME,\r\n          payload: 'system',\r\n        });\r\n      };\r\n\r\n      mediaQuery.addEventListener('change', handleChange);\r\n      return () => mediaQuery.removeEventListener('change', handleChange);\r\n    }\r\n  }, [state.theme]);\r\n\r\n  // Load preferences from localStorage\r\n  const loadPreferences = useCallback(() => {\r\n    try {\r\n      const saved = localStorage.getItem('blog_assistant_theme_preferences');\r\n      if (saved) {\r\n        const preferences = JSON.parse(saved);\r\n        dispatch({\r\n          type: THEME_ACTIONS.LOAD_PREFERENCES,\r\n          payload: preferences,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load theme preferences:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Save preferences to localStorage\r\n  const savePreferences = useCallback(() => {\r\n    try {\r\n      localStorage.setItem('blog_assistant_theme_preferences', JSON.stringify(state));\r\n    } catch (error) {\r\n      console.error('Failed to save theme preferences:', error);\r\n    }\r\n  }, [state]);\r\n\r\n  // Apply theme to document\r\n  const applyTheme = useCallback(() => {\r\n    const root = document.documentElement;\r\n    \r\n    // Apply theme class\r\n    root.className = root.className.replace(/theme-\\w+/g, '');\r\n    root.classList.add(`theme-${state.isDark ? 'dark' : 'light'}`);\r\n    \r\n    // Apply primary color\r\n    root.style.setProperty('--primary-color', state.primaryColor);\r\n    \r\n    // Apply font size\r\n    const fontSizes = {\r\n      small: '14px',\r\n      medium: '16px',\r\n      large: '18px',\r\n    };\r\n    root.style.setProperty('--base-font-size', fontSizes[state.fontSize]);\r\n    \r\n    // Apply animations\r\n    root.style.setProperty('--animation-duration', state.animations ? '0.3s' : '0s');\r\n    \r\n    // Apply sidebar state\r\n    root.classList.toggle('sidebar-collapsed', state.sidebarCollapsed);\r\n  }, [state.isDark, state.primaryColor, state.fontSize, state.animations, state.sidebarCollapsed]);\r\n\r\n  // Set theme\r\n  const setTheme = (theme) => {\r\n    dispatch({\r\n      type: THEME_ACTIONS.SET_THEME,\r\n      payload: theme,\r\n    });\r\n  };\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    dispatch({ type: THEME_ACTIONS.TOGGLE_THEME });\r\n  };\r\n\r\n  // Set primary color\r\n  const setPrimaryColor = (color) => {\r\n    dispatch({\r\n      type: THEME_ACTIONS.SET_PRIMARY_COLOR,\r\n      payload: color,\r\n    });\r\n  };\r\n\r\n  // Set font size\r\n  const setFontSize = (size) => {\r\n    dispatch({\r\n      type: THEME_ACTIONS.SET_FONT_SIZE,\r\n      payload: size,\r\n    });\r\n  };\r\n\r\n  // Toggle sidebar\r\n  const toggleSidebar = () => {\r\n    dispatch({ type: THEME_ACTIONS.TOGGLE_SIDEBAR });\r\n  };\r\n\r\n  // Set animations\r\n  const setAnimations = (enabled) => {\r\n    dispatch({\r\n      type: THEME_ACTIONS.SET_ANIMATIONS,\r\n      payload: enabled,\r\n    });\r\n  };\r\n\r\n  // Get CSS custom properties\r\n  const getCSSVariables = () => {\r\n    return {\r\n      '--primary-color': state.primaryColor,\r\n      '--base-font-size': {\r\n        small: '14px',\r\n        medium: '16px',\r\n        large: '18px',\r\n      }[state.fontSize],\r\n      '--animation-duration': state.animations ? '0.3s' : '0s',\r\n    };\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    // State\r\n    theme: state.theme,\r\n    isDark: state.isDark,\r\n    primaryColor: state.primaryColor,\r\n    fontSize: state.fontSize,\r\n    sidebarCollapsed: state.sidebarCollapsed,\r\n    animations: state.animations,\r\n    \r\n    // Actions\r\n    setTheme,\r\n    toggleTheme,\r\n    setPrimaryColor,\r\n    setFontSize,\r\n    toggleSidebar,\r\n    setAnimations,\r\n    \r\n    // Utilities\r\n    getCSSVariables,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}