{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/user/Documents/GitHub/ai-blog-assistant/ai-blog-assistant/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { toast } from 'react-hot-toast';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  // Changed to false to prevent loading screen\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_USER: 'UPDATE_USER'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...initialState,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth Provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  // Auto logout on token expiration\n  useEffect(() => {\n    if (state.token) {\n      const tokenExpiry = authService.getTokenExpiry(state.token);\n      if (tokenExpiry && tokenExpiry < Date.now()) {\n        logout();\n        toast.error('Session expired. Please login again.');\n      }\n    }\n  }, [state.token]);\n\n  // Load user from localStorage\n  const loadUser = async () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOAD_USER_START\n    });\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: 'No token found'\n        });\n        return;\n      }\n\n      // Verify token is still valid\n      const tokenExpiry = authService.getTokenExpiry(token);\n      if (tokenExpiry && tokenExpiry < Date.now()) {\n        localStorage.removeItem('token');\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: 'Token expired'\n        });\n        return;\n      }\n\n      // Get user profile\n      const user = await authService.getProfile();\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n        payload: user\n      });\n\n      // Update state with token\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n    } catch (error) {\n      localStorage.removeItem('token');\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n\n  // Login function\n  const login = async credentials => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await authService.login(credentials);\n\n      // Store token in localStorage\n      localStorage.setItem('token', response.access_token);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user: response.user,\n          token: response.access_token\n        }\n      });\n      toast.success('Login successful!');\n      return response;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: error.message\n      });\n      toast.error(error.message || 'Login failed');\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_START\n    });\n    try {\n      const response = await authService.register(userData);\n\n      // Store token in localStorage\n      localStorage.setItem('token', response.access_token);\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user: response.user,\n          token: response.access_token\n        }\n      });\n      toast.success('Registration successful!');\n      return response;\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: error.message\n      });\n      toast.error(error.message || 'Registration failed');\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateUser = userData => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user has specific permission/role\n  const hasPermission = permission => {\n    var _state$user$permissio;\n    if (!state.user) return false;\n    return ((_state$user$permissio = state.user.permissions) === null || _state$user$permissio === void 0 ? void 0 : _state$user$permissio.includes(permission)) || false;\n  };\n\n  // Check subscription status\n  const hasActiveSubscription = () => {\n    if (!state.user) return false;\n    return state.user.subscription_plan !== 'free';\n  };\n\n  // Get usage limits based on subscription\n  const getUsageLimits = () => {\n    if (!state.user) return {\n      monthly_limit: 0,\n      used: 0\n    };\n    const limits = {\n      free: 10,\n      basic: 100,\n      pro: 1000,\n      enterprise: -1 // unlimited\n    };\n    return {\n      monthly_limit: limits[state.user.subscription_plan] || 0,\n      used: state.user.content_generated || 0\n    };\n  };\n\n  // Context value\n  const value = {\n    // State\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated,\n    isLoading: state.isLoading,\n    error: state.error,\n    // Actions\n    login,\n    register,\n    logout,\n    loadUser,\n    updateUser,\n    clearError,\n    // Utilities\n    hasPermission,\n    hasActiveSubscription,\n    getUsageLimits\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","toast","jsxDEV","_jsxDEV","initialState","user","token","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CLEAR_ERROR","UPDATE_USER","authReducer","state","action","type","payload","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","loadUser","tokenExpiry","getTokenExpiry","Date","now","logout","localStorage","getItem","removeItem","getProfile","message","login","credentials","response","setItem","access_token","success","register","userData","updateUser","clearError","hasPermission","permission","_state$user$permissio","permissions","includes","hasActiveSubscription","subscription_plan","getUsageLimits","monthly_limit","used","limits","free","basic","pro","enterprise","content_generated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/c/Users/user/Documents/GitHub/ai-blog-assistant/ai-blog-assistant/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  isLoading: false, // Changed to false to prevent loading screen\r\n  error: null,\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  REGISTER_START: 'REGISTER_START',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n  LOAD_USER_START: 'LOAD_USER_START',\r\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\r\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\r\n  CLEAR_ERROR: 'CLEAR_ERROR',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n    case AUTH_ACTIONS.REGISTER_START:\r\n    case AUTH_ACTIONS.LOAD_USER_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n    case AUTH_ACTIONS.REGISTER_FAILURE:\r\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n      };\r\n\r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n\r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Auth Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Load user on app start\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  // Auto logout on token expiration\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      const tokenExpiry = authService.getTokenExpiry(state.token);\r\n      if (tokenExpiry && tokenExpiry < Date.now()) {\r\n        logout();\r\n        toast.error('Session expired. Please login again.');\r\n      }\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Load user from localStorage\r\n  const loadUser = async () => {\r\n    dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'No token found' });\r\n        return;\r\n      }\r\n\r\n      // Verify token is still valid\r\n      const tokenExpiry = authService.getTokenExpiry(token);\r\n      if (tokenExpiry && tokenExpiry < Date.now()) {\r\n        localStorage.removeItem('token');\r\n        dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'Token expired' });\r\n        return;\r\n      }\r\n\r\n      // Get user profile\r\n      const user = await authService.getProfile();\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS, \r\n        payload: user \r\n      });\r\n      \r\n      // Update state with token\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token }\r\n      });\r\n      \r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE, \r\n        payload: error.message \r\n      });\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n    \r\n    try {\r\n      const response = await authService.login(credentials);\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('token', response.access_token);\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: {\r\n          user: response.user,\r\n          token: response.access_token,\r\n        },\r\n      });\r\n      \r\n      toast.success('Login successful!');\r\n      return response;\r\n      \r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\r\n        payload: error.message,\r\n      });\r\n      toast.error(error.message || 'Login failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_START });\r\n    \r\n    try {\r\n      const response = await authService.register(userData);\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('token', response.access_token);\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\r\n        payload: {\r\n          user: response.user,\r\n          token: response.access_token,\r\n        },\r\n      });\r\n      \r\n      toast.success('Registration successful!');\r\n      return response;\r\n      \r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\r\n        payload: error.message,\r\n      });\r\n      toast.error(error.message || 'Registration failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUser = (userData) => {\r\n    dispatch({\r\n      type: AUTH_ACTIONS.UPDATE_USER,\r\n      payload: userData,\r\n    });\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Check if user has specific permission/role\r\n  const hasPermission = (permission) => {\r\n    if (!state.user) return false;\r\n    return state.user.permissions?.includes(permission) || false;\r\n  };\r\n\r\n  // Check subscription status\r\n  const hasActiveSubscription = () => {\r\n    if (!state.user) return false;\r\n    return state.user.subscription_plan !== 'free';\r\n  };\r\n\r\n  // Get usage limits based on subscription\r\n  const getUsageLimits = () => {\r\n    if (!state.user) return { monthly_limit: 0, used: 0 };\r\n    \r\n    const limits = {\r\n      free: 10,\r\n      basic: 100,\r\n      pro: 1000,\r\n      enterprise: -1, // unlimited\r\n    };\r\n    \r\n    return {\r\n      monthly_limit: limits[state.user.subscription_plan] || 0,\r\n      used: state.user.content_generated || 0,\r\n    };\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    // State\r\n    user: state.user,\r\n    token: state.token,\r\n    isAuthenticated: state.isAuthenticated,\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n    \r\n    // Actions\r\n    login,\r\n    register,\r\n    logout,\r\n    loadUser,\r\n    updateUser,\r\n    clearError,\r\n    \r\n    // Utilities\r\n    hasPermission,\r\n    hasActiveSubscription,\r\n    getUsageLimits,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}