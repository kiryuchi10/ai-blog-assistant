{"ast":null,"code":"\"use client\";\n\n// src/ReactQueryDevtools.tsx\nimport * as React from \"react\";\nimport { onlineManager, useQueryClient } from \"@tanstack/react-query\";\nimport { TanstackQueryDevtools } from \"@tanstack/query-devtools\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ReactQueryDevtools(props) {\n  const queryClient = useQueryClient(props.client);\n  const ref = React.useRef(null);\n  const {\n    buttonPosition,\n    position,\n    initialIsOpen,\n    errorTypes,\n    styleNonce,\n    shadowDOMTarget\n  } = props;\n  const [devtools] = React.useState(new TanstackQueryDevtools({\n    client: queryClient,\n    queryFlavor: \"React Query\",\n    version: \"5\",\n    onlineManager,\n    buttonPosition,\n    position,\n    initialIsOpen,\n    errorTypes,\n    styleNonce,\n    shadowDOMTarget\n  }));\n  React.useEffect(() => {\n    devtools.setClient(queryClient);\n  }, [queryClient, devtools]);\n  React.useEffect(() => {\n    if (buttonPosition) {\n      devtools.setButtonPosition(buttonPosition);\n    }\n  }, [buttonPosition, devtools]);\n  React.useEffect(() => {\n    if (position) {\n      devtools.setPosition(position);\n    }\n  }, [position, devtools]);\n  React.useEffect(() => {\n    devtools.setInitialIsOpen(initialIsOpen || false);\n  }, [initialIsOpen, devtools]);\n  React.useEffect(() => {\n    devtools.setErrorTypes(errorTypes || []);\n  }, [errorTypes, devtools]);\n  React.useEffect(() => {\n    if (ref.current) {\n      devtools.mount(ref.current);\n    }\n    return () => {\n      devtools.unmount();\n    };\n  }, [devtools]);\n  return /* @__PURE__ */jsx(\"div\", {\n    dir: \"ltr\",\n    className: \"tsqd-parent-container\",\n    ref\n  });\n}\nexport { ReactQueryDevtools };","map":{"version":3,"names":["React","onlineManager","useQueryClient","TanstackQueryDevtools","jsx","ReactQueryDevtools","props","queryClient","client","ref","useRef","buttonPosition","position","initialIsOpen","errorTypes","styleNonce","shadowDOMTarget","devtools","useState","queryFlavor","version","useEffect","setClient","setButtonPosition","setPosition","setInitialIsOpen","setErrorTypes","current","mount","unmount","dir","className"],"sources":["C:/Users/user/Documents/GitHub/ai-blog-assistant/ai-blog-assistant/frontend/node_modules/@tanstack/react-query-devtools/build/modern/ReactQueryDevtools.js"],"sourcesContent":["\"use client\";\n\n// src/ReactQueryDevtools.tsx\nimport * as React from \"react\";\nimport { onlineManager, useQueryClient } from \"@tanstack/react-query\";\nimport { TanstackQueryDevtools } from \"@tanstack/query-devtools\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ReactQueryDevtools(props) {\n  const queryClient = useQueryClient(props.client);\n  const ref = React.useRef(null);\n  const {\n    buttonPosition,\n    position,\n    initialIsOpen,\n    errorTypes,\n    styleNonce,\n    shadowDOMTarget\n  } = props;\n  const [devtools] = React.useState(\n    new TanstackQueryDevtools({\n      client: queryClient,\n      queryFlavor: \"React Query\",\n      version: \"5\",\n      onlineManager,\n      buttonPosition,\n      position,\n      initialIsOpen,\n      errorTypes,\n      styleNonce,\n      shadowDOMTarget\n    })\n  );\n  React.useEffect(() => {\n    devtools.setClient(queryClient);\n  }, [queryClient, devtools]);\n  React.useEffect(() => {\n    if (buttonPosition) {\n      devtools.setButtonPosition(buttonPosition);\n    }\n  }, [buttonPosition, devtools]);\n  React.useEffect(() => {\n    if (position) {\n      devtools.setPosition(position);\n    }\n  }, [position, devtools]);\n  React.useEffect(() => {\n    devtools.setInitialIsOpen(initialIsOpen || false);\n  }, [initialIsOpen, devtools]);\n  React.useEffect(() => {\n    devtools.setErrorTypes(errorTypes || []);\n  }, [errorTypes, devtools]);\n  React.useEffect(() => {\n    if (ref.current) {\n      devtools.mount(ref.current);\n    }\n    return () => {\n      devtools.unmount();\n    };\n  }, [devtools]);\n  return /* @__PURE__ */ jsx(\"div\", { dir: \"ltr\", className: \"tsqd-parent-container\", ref });\n}\nexport {\n  ReactQueryDevtools\n};\n//# sourceMappingURL=ReactQueryDevtools.js.map"],"mappings":"AAAA,YAAY;;AAEZ;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,cAAc,QAAQ,uBAAuB;AACrE,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EACjC,MAAMC,WAAW,GAAGL,cAAc,CAACI,KAAK,CAACE,MAAM,CAAC;EAChD,MAAMC,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM;IACJC,cAAc;IACdC,QAAQ;IACRC,aAAa;IACbC,UAAU;IACVC,UAAU;IACVC;EACF,CAAC,GAAGV,KAAK;EACT,MAAM,CAACW,QAAQ,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAC/B,IAAIf,qBAAqB,CAAC;IACxBK,MAAM,EAAED,WAAW;IACnBY,WAAW,EAAE,aAAa;IAC1BC,OAAO,EAAE,GAAG;IACZnB,aAAa;IACbU,cAAc;IACdC,QAAQ;IACRC,aAAa;IACbC,UAAU;IACVC,UAAU;IACVC;EACF,CAAC,CACH,CAAC;EACDhB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpBJ,QAAQ,CAACK,SAAS,CAACf,WAAW,CAAC;EACjC,CAAC,EAAE,CAACA,WAAW,EAAEU,QAAQ,CAAC,CAAC;EAC3BjB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpB,IAAIV,cAAc,EAAE;MAClBM,QAAQ,CAACM,iBAAiB,CAACZ,cAAc,CAAC;IAC5C;EACF,CAAC,EAAE,CAACA,cAAc,EAAEM,QAAQ,CAAC,CAAC;EAC9BjB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpB,IAAIT,QAAQ,EAAE;MACZK,QAAQ,CAACO,WAAW,CAACZ,QAAQ,CAAC;IAChC;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEK,QAAQ,CAAC,CAAC;EACxBjB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpBJ,QAAQ,CAACQ,gBAAgB,CAACZ,aAAa,IAAI,KAAK,CAAC;EACnD,CAAC,EAAE,CAACA,aAAa,EAAEI,QAAQ,CAAC,CAAC;EAC7BjB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpBJ,QAAQ,CAACS,aAAa,CAACZ,UAAU,IAAI,EAAE,CAAC;EAC1C,CAAC,EAAE,CAACA,UAAU,EAAEG,QAAQ,CAAC,CAAC;EAC1BjB,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpB,IAAIZ,GAAG,CAACkB,OAAO,EAAE;MACfV,QAAQ,CAACW,KAAK,CAACnB,GAAG,CAACkB,OAAO,CAAC;IAC7B;IACA,OAAO,MAAM;MACXV,QAAQ,CAACY,OAAO,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EACd,OAAO,eAAgBb,GAAG,CAAC,KAAK,EAAE;IAAE0B,GAAG,EAAE,KAAK;IAAEC,SAAS,EAAE,uBAAuB;IAAEtB;EAAI,CAAC,CAAC;AAC5F;AACA,SACEJ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}